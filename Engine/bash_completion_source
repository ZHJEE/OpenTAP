#!/bin/bash


get_tap(){
    local tap_cmd="`which tap`"

    if [ ! -x "$tap_cmd" ]; then
        local tap_cmd="`which tap.exe`"
    fi

    printf "%q" "$tap_cmd"
}

quote_if_needed(){
    # Quote input if it contains spaces, otherwise return it
    awk '/ / { print "\""$0"\"" } /^[^ ]+$/ { print $0 }'
}

_tap_comp()
{
    _init_completion || return
    local current="${COMP_WORDS[COMP_CWORD]}"
    local WSLENV="TPM_PIPE=_prevent_tap_from_running_isolated_:OPENTAP_DEBUGGER_ASSEMBLY"
    declare -a words

    # skip tap.exe
    local words="${COMP_WORDS[@]:1}"

    mapfile -t completions < <( "$(get_tap)" "complete" "${words[@]}" )
    local MAGIC=( ${completions[@]:0:1} ); completions=( "${completions[@]:1}" )

    if [[ ! "$MAGIC" == "BASH_COMPLETIONS_SUPPORTED"* ]]; then
        # echo
        # echo
        # echo
        # echo "Bash completion is available in OpenTAP 9.5 and above"
        # echo
       return 1
    fi

    local escaped_completions="$( printf '%q ' "${completions[@]}" )"

    case "${COMP_WORDS[@]}" in
        *"package create"*)
            _filedir '@(xml)'
            ;;
        *"package install"*)
            _filedir '@(TapPackage)'
            ;;
    esac

    mapfile -t final_completions < <( compgen -W "$escaped_completions" -- "$current" | quote_if_needed )

    COMPREPLY+=("${final_completions[@]}")

}

if [ -x "$(get_tap)" ]; then
    if [[ "$(get_tap)" == *"tap.exe" ]]; then
        complete -F _tap_comp tap.exe
        else
        complete -F _tap_comp tap
    fi
# else
    # echo "Tap not found."
fi
