<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup>
    <PackagePayloadFiles Condition="'$(MSBuildThisFileDirectory)' != '' And
                                   HasTrailingSlash('$(MSBuildThisFileDirectory)')"
                         Include="$(MSBuildThisFileDirectory)payload\**\*"/>
  </ItemGroup>

  <Target Name="CopyOpenTapPayloadFiles"
          Condition="'$(CopyOpenTapPayloadFiles)' != 'false' And
                     '$(OutDir)' != '' And
                     HasTrailingSlash('$(OutDir)') And
                     Exists('$(OutDir)')"
          Inputs="@(PackagePayloadFiles)"
          Outputs="@(PackagePayloadFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')"
          BeforeTargets="Build;PostBuildEvent">
    <Copy SourceFiles="@(PackagePayloadFiles)"
          DestinationFiles="@(PackagePayloadFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="CleanOpenTapPayloadFiles"
          Condition="'$(CleanOpenTapPayloadFiles)' != 'false' And
                     '$(OutDir)' != '' And
                     HasTrailingSlash('$(OutDir)') And
                     Exists('$(OutDir)')"
          BeforeTargets="Clean">
    <ItemGroup>
      <PackagePayloadFilesToClean Include="@(PackagePayloadFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')"/>
    </ItemGroup>
    <Delete Files="@(PackagePayloadFilesToClean)" />
  </Target>

  <Target Name="CreateOpenTapPackage"
          Condition="'$(CreateOpenTapPackage)' != 'false' And
                     '$(OutDir)' != '' And
                     Exists('$(OutDir)') And
                     '$(OpenTapPackageDefinitionPath)' != '' And
                     Exists('$(OpenTapPackageDefinitionPath)')"
          AfterTargets="Build">
    <Exec Command=".\tap.exe package create &quot;$(ProjectDir)\$(OpenTapPackageDefinitionPath)&quot;" WorkingDirectory="$(OutDir)" LogStandardErrorAsError="true" />
  </Target>

  <Target Name="InstallOpenTapPackages"
        Inputs="$(MSBuildProjectFullPath)"
        Outputs="@(AdditionalOpenTapPackage-> '$(OutDir)Packages/%(Identity)/package.xml')"
        DependsOnTargets="CopyOpenTapPayloadFiles" AfterTargets="CopyOpenTapPayloadFiles">
    <Exec Command=".\tap.exe package install --dependencies --force &quot;%(AdditionalOpenTapPackage.Identity)&quot;"
          Condition="'%(AdditionalOpenTapPackage.Repository)' == '' AND '%(AdditionalOpenTapPackage.Version)' == ''"
          LogStandardErrorAsError="true" EnvironmentVariables="OPENTAP_DEBUG_INSTALL=true" WorkingDirectory="$(OutDir)"/>
    <Exec Command=".\tap.exe package install --dependencies --force &quot;%(AdditionalOpenTapPackage.Identity)&quot; -r &quot;%(AdditionalOpenTapPackage.Repository)&quot;"
          Condition="'%(AdditionalOpenTapPackage.Repository)' != '' AND '%(AdditionalOpenTapPackage.Version)' == ''"
          LogStandardErrorAsError="true" EnvironmentVariables="OPENTAP_DEBUG_INSTALL=true" WorkingDirectory="$(OutDir)"/>
    <Exec Command=".\tap.exe package install --dependencies --force &quot;%(AdditionalOpenTapPackage.Identity)&quot; --version &quot;%(AdditionalOpenTapPackage.Version)&quot;"
          Condition="'%(AdditionalOpenTapPackage.Repository)' == '' AND '%(AdditionalOpenTapPackage.Version)' != ''"
          LogStandardErrorAsError="true" EnvironmentVariables="OPENTAP_DEBUG_INSTALL=true" WorkingDirectory="$(OutDir)"/>
    <Exec Command=".\tap.exe package install --dependencies --force &quot;%(AdditionalOpenTapPackage.Identity)&quot; -r &quot;%(AdditionalOpenTapPackage.Repository)&quot; --version &quot;%(AdditionalOpenTapPackage.Version)&quot;"
          Condition="'%(AdditionalOpenTapPackage.Repository)' != '' AND '%(AdditionalOpenTapPackage.Version)' != ''"
          LogStandardErrorAsError="true" EnvironmentVariables="OPENTAP_DEBUG_INSTALL=true" WorkingDirectory="$(OutDir)"/>
  </Target>

</Project>
