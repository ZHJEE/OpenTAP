#!/bin/bash

declare -A _tap_comp_cache_

get_tap() {
    local tap_cmd="$(which tap)"

    if [ ! -x "$tap_cmd" ]; then
        local tap_cmd="$(which tap.exe)"
    fi

    printf "%q" "$(readlink -f $tap_cmd)"
}

_tap_comp() {

    quote_if_needed() {
        # Quote a string if it contains spaces
        awk '/ / { print "\""$0"\"" } /^[^ ]+$/ { print $0 }'
    }

    log() {
        echo "$@" >>~/.complog
    }

    _init_completion || return
    local current="${COMP_WORDS[COMP_CWORD]}"
    local WSLENV="OPENTAP_DEBUGGER_ASSEMBLY"

    local tapdir="$(get_tap)"
    local tapdir="${tapdir%/*}"

    local package_hash="$(tar cP "$tapdir/Packages" | md5sum)"

    # Invalidate cache if the hash has changed
    if [[ ! "$package_hash" == "${_tap_comp_cache_[package_hash]}" ]]; then
        # Necessary because bash does not provide a way to clear a global map
        for i in "${!_tap_comp_cache_[@]}"; do
            _tap_comp_cache_["$i"]=""
        done

        _tap_comp_cache_["package_hash"]="$package_hash"
    fi

    # skip tap.exe
    local words="${COMP_WORDS[@]:1}"

    local cache_key="${COMP_WORDS[@]}"

    # Remove everything following last space if current word is not yet completed
    if [ ! -z "$2" ]; then
        local cache_key="${cache_key% *}"
    fi

    # Remove everything following a quote or dash
    local cache_key="${cache_key%%\"*}"
    local cache_key="${cache_key%%-*}"

    if [ -z "${_tap_comp_cache_[$cache_key]}" ]; then
        mapfile -t completions < <("$(get_tap)" "complete" "${words[@]}")
        local MAGIC="${completions[0]}"
        unset 'completions[0]'
        local escaped_completions="$(printf '%q ' "${completions[@]}")"
        _tap_comp_cache_[$cache_key]="$escaped_completions"
    else
        local MAGIC="BASH_COMPLETIONS_SUPPORTED"
        escaped_completions="${_tap_comp_cache_[$cache_key]}"
    fi

    if [[ ! "$MAGIC" == "BASH_COMPLETIONS_SUPPORTED"* ]]; then
        return 1
    fi

    declare -a unique_completions
    local i=0
    for word in ${escaped_completions[@]}; do
        if [[ ! "${COMP_WORDS[@]}" == *"$word"* ]]; then
            unique_completions[i++]="$word"
        fi
    done
    local unique_completions="${unique_completions[@]}"

    mapfile -t final_completions < <(compgen -W "$unique_completions" -- "$current" | quote_if_needed)

    case "${COMP_WORDS[@]}" in
    *"package create "*)
        _filedir '@(xml)'
        ;;
    *"package install "*)
        _filedir '@(TapPackage)'
        ;;
    *" run "*)
        _filedir '@(TapPlan)'
        ;;
    esac

    COMPREPLY+=("${final_completions[@]}")

}

if [[ "$(uname --kernel-version)" == *Microsoft* ]]; then
    complete -o default -o nosort -F _tap_comp tap.exe
else
    complete -o default -o nosort -F _tap_comp tap
fi
